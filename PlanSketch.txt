
Tirsdag – Heldags efter skole / Maks 23
Fredag -  Heldags / Min. Midnat

Priority: ITO, SWD, SWK/OSCA

Pauser: 2 timers arbejde = 30 mins. Pause.

Report: Min. pgs 45-70 mx.
Hand-in June 1st 2016, 12:00 pm

-------------------------------------------------------------------------------------
Tasks>
-------------------------------------------------------------------------------------
Inception phase

Elaboration phase

Construction phase


-------------------------------------------------------------------------------------
In progress>
-------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------
Done>
-------------------------------------------------------------------------------------

Assorted Tasks>
ER Diagram, Construction / Ask Signe about ER Diagram / ER Auto-Gen is okay as long as it's correct and we can explain it.
Use Case Diagrams, Elaboration / Ask Asger monday, reg. extends includes etc., Iteration 2
Setting up a file for the report itself that meets criteria, see assignment handout, Iteration 2
Prepare everything for SWOT, Iteration 1
Iteration 2 - Finished 9th of May 2016.
Missing: (Brief) View Course Participants, Iteration 2
Jonas/Fredrik - Correct Use Cases in Report and models, Iteration 3
Adjust/Create(MySQL Settings Casual+SystemSeq.Dia.) UseCases, System Sequence Diagrams, Use Case Diagram, Iteration 3
Adjust Prototype; List View Existing Course Responsibles, Course Certificate Sent True Fals Column , Iteration 3
Correct Prototype / Add Course Participant Part
Correct colour code in Database Spreadsheet, Iteration 3




Inception>

Preliminary ER Diagram, Iteration 1
Prototype Version 1, Iteration 1

Elaboration>

Prototype Version 2 , Iteration 2
Prototype Version 3 Admin Rights, Iteration 3
Prototype Version 3 Regular, Iteration 3

Construction>

Making a database, Iteration 1
Database Normalisation, Iteration 2
Database description schema, Iteration 2
Scene Graph, Iteration 2
Class diagram with relational schema, Iteration 3
Class model (Logical arch / Layers), Iteration 3
Construction phase
Activity diagram (limited) / How work load is shared., Iteration 3
Full Documentation / Comments for every method, Iteration 3
Program itself: Classes, methods, variables, conditions, loops, data structure(Collection/Obs.List), Inheritance/Interfaces, GUI JAVAFX, Iteration 3
Usage of patterns, GRASP, Iteratino 3
User manual, Iteration 3
Reviews, Iteration 2+3+4
Sequence Diagrams, Iteration 3






Transition>

-------------------------------------------------------------------------------------
Across Phases>
------------------------------------------------------------------------------------

CaptainsLog
PlanSketch
ServerInfo

-------------------------------------------------------------------------------------
Rapport done>
-------------------------------------------------------------------------------------
Inception Rapport>
Requirements analysis, Iteration 1
Stakeholder Analysis(Risk Analysis), Iteration 1
Feasibility Studies(Technical, Schedule), Iteration 1
Vision, Iteration 2

Elaboration Rapport>
FURPS+, Iteration 2
Use Classes, 17 Total, Iteration 2
System Sequence Diagram, Iteration 2
Domain Model, Iteration 2
Preliminary Domain Model / Footnote, Iteration 2

Construction Rapport>

Transition Rapport>


-------------------------------------------------------------------------------------
Task Trash>
-------------------------------------------------------------------------------------

Gant Chart
Qscribbles
Qteachers


-------------------------------------------------------------------------------------
Plan OLD>
-------------------------------------------------------------------------------------

Use Case pr. Function. Briefs are bare minimum
Fully Dressed (Generate Certificate Template, Send Missing Certificate, Add Course)

Casual (Remove Course, Remove Course Participant, FTP Settings, SMTP Settings)

Brief (Add Course Participant(s), Add Course Responsible, Remove Course Responsible, Remove Certificate Template, List Courses, List Course Responsibles, View Missing Certificate, View Active Courses, View All Courses, View Inactive Courses)


-------------------------------------------------------------------------------------
Questions>
-------------------------------------------------------------------------------------
1. How do we properly make it clear that we've used UP as a tool to develop our project?
Asger: “It Will be apparent through the way our project is structured.”

2. Ask Asger about license and which diagrams to use (construction phase → state diagram)?
Ager: "Tilstands diagram hvis vores program har tisltande, kommer an på om det giver mening."



-------------------------------------------------------------------------------------
Quick Notes>
-------------------------------------------------------------------------------------
0.
Vi har valgt at anvende en blanding af vandfaldsmodel og UP. Dette har vi gjort fordi, at vores kunde grundlæggende har været sikker på kravene til programmet. Samtidig har det været sundt for projektet at gå tilbage og revidere implementeringen og modeleringen af af de krav vi har haft. Vi har derved arbejdet iterativt (lavet noget, som vi senere hen har evauleret og lavet om/gjort bedre) og stringent efter inception, elaboration, construction og transition. Det har vœret en langsommere UP udvikling med fœrre iterationer end det der sœdvanligvis kendetegner UP, og med lånte principper fra vandfaldsmodellen.


1.
Admin Main View: Active Courses - Timeframe (2 days +, 1 days -)
				 Missing Certs Window - Level of View: Courses
				 // For both update windows we'll add real-time functionality.

2.
Admin Main View vs Course Responsible View conflict. There is a conflict in terms that we'll have Users who are simultaneously course responsibles and admins and which Landing Page should be prioritised for Main View. We've decided that Admin should always land on Admin Main View as default and that if the Admins wishes he will have a settings checkbox where he can decide on Course Responsible View, which will then be stored for the future until unchecked.

3.
Database Design:

We've discussed userID vs. email as identififaction for participants since both are unique. We decided on userID's not being superficial so that emails could be changed at a later point without corrupting pre-existing data. This is the same accross the board for all actors.

4. Trashed
View as functionality:
We've decided to add View as functionality within the Admin Settings pane. It's a dropdown selection of each individual user. When a user is selected and the "View as" button pressed a new window with the program will be launched following that user's access level, when that program is closed the original admin program will not be closed along with it. Both programs will be running simultaneously, admin will be inactive while the other Window is open and reactived once closed.

5. Home Screen

Home Screen will not give you a database view at any point, it will simulate a collection of tabs and buttons that give access to functionality and information through secondary means. The entire program will spawn new Windows the further you go down the rabbit hole. Each previous window till become inactived until you've taken action on the most recently opened window. This way we prevent any confusion and follow the norm in using pop-up windows within a program.


6. Language Fil / Importance: Minor / Risk: None
Til allersidst hvis tiden er til det vil vi implementere en language fil saaledes at man kan skifte imellem sprog.

7. Certificate Generator / Importance: High / Risk: High
We've decided to add a Custom Certificate Generator and have thoughts about using unit testing on this part of the program to ensure proper functionality. This will be prioritised above Language File functionality. The Client would be very happy if this were to be implemented into our program.

8. Database info from Kristian
We are going to run the entire program on a seperate database from their exisiting one. We will have to decide on structure and general implementation thereof.

9. Statistics
Eventually we might add a statistics part so that he can use this functionality for customer retention as suggested by Asger.

10. Password Reset / Importance: Critical / Risk: High
We've discussed the need to add a password reset button before login in case the admin throws away his password so that the system won't be lost. This reset password will be hardcoded into the system. Functionality has not been added in prototype. The password reset system will reset all admin accounts.

11. Generate Course Cert. / Importance: Critical / Risk: Low
Discussing which information should be mandatory.
[ ] Signature of Course Responsible / None Mandatory
[x] Date of Certificate Print / None Mandatory
[ ] Course Participant / None Mandatory
[ ] Course Name	/ Mandatory

We've reasoned that Course Name should be mandatory. They're the bare minimum information required for a certificate. This could come in handy in a scenario where you have a course with hundreds of unregistered participants and you pre-print alot of certificates to be handed out manually at the course itself.

12. Scheduling Feasibility Studies / Source: http://www.simplilearn.com/feasibility-study-article
Scheduling Feasibility is the most important in terms of project success. A project will fail if not completed on time. In scheduling feasibility we estimate how much time the system will take to complete and with our technical skill we need to estimate the period to complete the project using some methods.


13. Template Serial
We've come to the realisation, that the course certificate serial could be a composite key of (CourseParticipantID, CourseID).

14. Prototype retro perspective
After initiating in use case gathering, we have reviewed our mock-up and have been able to enlist some nessecary changes for an upcoming 2.0 version:
- How do you get to course participants?
- How do you access course material AND how do you access/upload couse material AFTER the course has finished/has been added?
- Remove "Admin" and replace with "Course responsible with admin rights"
- HOW DO YOU SEND CERTIFICATES? Do we do it via OS mail program or directly behind the scenes through a mail server? Ask Kristian!!
- A pane menu, anything where you administer removal in general.

15. Use Case Model Segmentation
TRASHED
Group 1: Course Responsible Admin Rights, Generate Certificate Template, FTP Settings, SMTP Settings, Remove Course Responsible, Remove Course, Add Course Responsible, Remove Certificate Template

Group 2: Course Responsible
Add Courses, Add Course Participant(s), Remove Course Participant, Send Missing Certificate

Group 3: Viewables
View Courses, View Course Responsibles, View Missing Certificate, View Active Courses, View All Courses, View Inactive Courses
TRASHED

CD Generate Course Certificate Template, Remove Certificate Template

CRD Add Course Responsble, View Course Responsibles, Remove Course Responsible

CR Add Course, View Courses,<extends> View Active Courses, View All Courses, View Inactive Courses

Remove Course
FTP Settings
SMTP Settings

RU View Missing Certificate, Send Missing Certificate

CRD Add Course Participant, View Course Participant, Remove Course Participant

CRUD, CREATE READ UPDATE DELETE.

NUMBER INDEXED USE CASe

COLOUR CODE EVT

RENAME TO VIEW







